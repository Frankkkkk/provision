package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type ListBootenvsOK
const ListBootenvsOKCode int = 200

/*ListBootenvsOK list bootenvs o k

swagger:response listBootenvsOK
*/
type ListBootenvsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.BootenvOutput `json:"body,omitempty"`
}

// NewListBootenvsOK creates ListBootenvsOK with default headers values
func NewListBootenvsOK() *ListBootenvsOK {
	return &ListBootenvsOK{}
}

// WithPayload adds the payload to the list bootenvs o k response
func (o *ListBootenvsOK) WithPayload(payload []*models.BootenvOutput) *ListBootenvsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list bootenvs o k response
func (o *ListBootenvsOK) SetPayload(payload []*models.BootenvOutput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListBootenvsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.BootenvOutput, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// HTTP code for type ListBootenvsUnauthorized
const ListBootenvsUnauthorizedCode int = 401

/*ListBootenvsUnauthorized list bootenvs unauthorized

swagger:response listBootenvsUnauthorized
*/
type ListBootenvsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListBootenvsUnauthorized creates ListBootenvsUnauthorized with default headers values
func NewListBootenvsUnauthorized() *ListBootenvsUnauthorized {
	return &ListBootenvsUnauthorized{}
}

// WithPayload adds the payload to the list bootenvs unauthorized response
func (o *ListBootenvsUnauthorized) WithPayload(payload *models.Error) *ListBootenvsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list bootenvs unauthorized response
func (o *ListBootenvsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListBootenvsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type ListBootenvsNotFound
const ListBootenvsNotFoundCode int = 404

/*ListBootenvsNotFound list bootenvs not found

swagger:response listBootenvsNotFound
*/
type ListBootenvsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListBootenvsNotFound creates ListBootenvsNotFound with default headers values
func NewListBootenvsNotFound() *ListBootenvsNotFound {
	return &ListBootenvsNotFound{}
}

// WithPayload adds the payload to the list bootenvs not found response
func (o *ListBootenvsNotFound) WithPayload(payload *models.Error) *ListBootenvsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list bootenvs not found response
func (o *ListBootenvsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListBootenvsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type ListBootenvsInternalServerError
const ListBootenvsInternalServerErrorCode int = 500

/*ListBootenvsInternalServerError list bootenvs internal server error

swagger:response listBootenvsInternalServerError
*/
type ListBootenvsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListBootenvsInternalServerError creates ListBootenvsInternalServerError with default headers values
func NewListBootenvsInternalServerError() *ListBootenvsInternalServerError {
	return &ListBootenvsInternalServerError{}
}

// WithPayload adds the payload to the list bootenvs internal server error response
func (o *ListBootenvsInternalServerError) WithPayload(payload *models.Error) *ListBootenvsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list bootenvs internal server error response
func (o *ListBootenvsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListBootenvsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
