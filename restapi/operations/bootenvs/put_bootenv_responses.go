package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type PutBootenvOK
const PutBootenvOKCode int = 200

/*PutBootenvOK put bootenv o k

swagger:response putBootenvOK
*/
type PutBootenvOK struct {

	/*
	  In: Body
	*/
	Payload *models.BootenvOutput `json:"body,omitempty"`
}

// NewPutBootenvOK creates PutBootenvOK with default headers values
func NewPutBootenvOK() *PutBootenvOK {
	return &PutBootenvOK{}
}

// WithPayload adds the payload to the put bootenv o k response
func (o *PutBootenvOK) WithPayload(payload *models.BootenvOutput) *PutBootenvOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put bootenv o k response
func (o *PutBootenvOK) SetPayload(payload *models.BootenvOutput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutBootenvOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutBootenvUnauthorized
const PutBootenvUnauthorizedCode int = 401

/*PutBootenvUnauthorized put bootenv unauthorized

swagger:response putBootenvUnauthorized
*/
type PutBootenvUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutBootenvUnauthorized creates PutBootenvUnauthorized with default headers values
func NewPutBootenvUnauthorized() *PutBootenvUnauthorized {
	return &PutBootenvUnauthorized{}
}

// WithPayload adds the payload to the put bootenv unauthorized response
func (o *PutBootenvUnauthorized) WithPayload(payload *models.Error) *PutBootenvUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put bootenv unauthorized response
func (o *PutBootenvUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutBootenvUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutBootenvNotFound
const PutBootenvNotFoundCode int = 404

/*PutBootenvNotFound put bootenv not found

swagger:response putBootenvNotFound
*/
type PutBootenvNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutBootenvNotFound creates PutBootenvNotFound with default headers values
func NewPutBootenvNotFound() *PutBootenvNotFound {
	return &PutBootenvNotFound{}
}

// WithPayload adds the payload to the put bootenv not found response
func (o *PutBootenvNotFound) WithPayload(payload *models.Error) *PutBootenvNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put bootenv not found response
func (o *PutBootenvNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutBootenvNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutBootenvConflict
const PutBootenvConflictCode int = 409

/*PutBootenvConflict put bootenv conflict

swagger:response putBootenvConflict
*/
type PutBootenvConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutBootenvConflict creates PutBootenvConflict with default headers values
func NewPutBootenvConflict() *PutBootenvConflict {
	return &PutBootenvConflict{}
}

// WithPayload adds the payload to the put bootenv conflict response
func (o *PutBootenvConflict) WithPayload(payload *models.Error) *PutBootenvConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put bootenv conflict response
func (o *PutBootenvConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutBootenvConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutBootenvInternalServerError
const PutBootenvInternalServerErrorCode int = 500

/*PutBootenvInternalServerError put bootenv internal server error

swagger:response putBootenvInternalServerError
*/
type PutBootenvInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutBootenvInternalServerError creates PutBootenvInternalServerError with default headers values
func NewPutBootenvInternalServerError() *PutBootenvInternalServerError {
	return &PutBootenvInternalServerError{}
}

// WithPayload adds the payload to the put bootenv internal server error response
func (o *PutBootenvInternalServerError) WithPayload(payload *models.Error) *PutBootenvInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put bootenv internal server error response
func (o *PutBootenvInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutBootenvInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
