package dhcp_reservations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type LISTDhcpReservationsOK
const LISTDhcpReservationsOKCode int = 200

/*LISTDhcpReservationsOK l i s t dhcp reservations o k

swagger:response lISTDhcpReservationsOK
*/
type LISTDhcpReservationsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.DhcpReservationInput `json:"body,omitempty"`
}

// NewLISTDhcpReservationsOK creates LISTDhcpReservationsOK with default headers values
func NewLISTDhcpReservationsOK() *LISTDhcpReservationsOK {
	return &LISTDhcpReservationsOK{}
}

// WithPayload adds the payload to the l i s t dhcp reservations o k response
func (o *LISTDhcpReservationsOK) WithPayload(payload []*models.DhcpReservationInput) *LISTDhcpReservationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the l i s t dhcp reservations o k response
func (o *LISTDhcpReservationsOK) SetPayload(payload []*models.DhcpReservationInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LISTDhcpReservationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.DhcpReservationInput, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
