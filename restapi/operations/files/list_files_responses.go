package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type ListFilesOK
const ListFilesOKCode int = 200

/*ListFilesOK list files o k

swagger:response listFilesOK
*/
type ListFilesOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewListFilesOK creates ListFilesOK with default headers values
func NewListFilesOK() *ListFilesOK {
	return &ListFilesOK{}
}

// WithPayload adds the payload to the list files o k response
func (o *ListFilesOK) WithPayload(payload []string) *ListFilesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list files o k response
func (o *ListFilesOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListFilesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// HTTP code for type ListFilesUnauthorized
const ListFilesUnauthorizedCode int = 401

/*ListFilesUnauthorized list files unauthorized

swagger:response listFilesUnauthorized
*/
type ListFilesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListFilesUnauthorized creates ListFilesUnauthorized with default headers values
func NewListFilesUnauthorized() *ListFilesUnauthorized {
	return &ListFilesUnauthorized{}
}

// WithPayload adds the payload to the list files unauthorized response
func (o *ListFilesUnauthorized) WithPayload(payload *models.Error) *ListFilesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list files unauthorized response
func (o *ListFilesUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListFilesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type ListFilesNotFound
const ListFilesNotFoundCode int = 404

/*ListFilesNotFound list files not found

swagger:response listFilesNotFound
*/
type ListFilesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListFilesNotFound creates ListFilesNotFound with default headers values
func NewListFilesNotFound() *ListFilesNotFound {
	return &ListFilesNotFound{}
}

// WithPayload adds the payload to the list files not found response
func (o *ListFilesNotFound) WithPayload(payload *models.Error) *ListFilesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list files not found response
func (o *ListFilesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListFilesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type ListFilesInternalServerError
const ListFilesInternalServerErrorCode int = 500

/*ListFilesInternalServerError list files internal server error

swagger:response listFilesInternalServerError
*/
type ListFilesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListFilesInternalServerError creates ListFilesInternalServerError with default headers values
func NewListFilesInternalServerError() *ListFilesInternalServerError {
	return &ListFilesInternalServerError{}
}

// WithPayload adds the payload to the list files internal server error response
func (o *ListFilesInternalServerError) WithPayload(payload *models.Error) *ListFilesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list files internal server error response
func (o *ListFilesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListFilesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
