package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type DeleteFileNoContent
const DeleteFileNoContentCode int = 204

/*DeleteFileNoContent delete file no content

swagger:response deleteFileNoContent
*/
type DeleteFileNoContent struct {
}

// NewDeleteFileNoContent creates DeleteFileNoContent with default headers values
func NewDeleteFileNoContent() *DeleteFileNoContent {
	return &DeleteFileNoContent{}
}

// WriteResponse to the client
func (o *DeleteFileNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// HTTP code for type DeleteFileUnauthorized
const DeleteFileUnauthorizedCode int = 401

/*DeleteFileUnauthorized delete file unauthorized

swagger:response deleteFileUnauthorized
*/
type DeleteFileUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteFileUnauthorized creates DeleteFileUnauthorized with default headers values
func NewDeleteFileUnauthorized() *DeleteFileUnauthorized {
	return &DeleteFileUnauthorized{}
}

// WithPayload adds the payload to the delete file unauthorized response
func (o *DeleteFileUnauthorized) WithPayload(payload *models.Error) *DeleteFileUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete file unauthorized response
func (o *DeleteFileUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFileUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type DeleteFileForbidden
const DeleteFileForbiddenCode int = 403

/*DeleteFileForbidden delete file forbidden

swagger:response deleteFileForbidden
*/
type DeleteFileForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteFileForbidden creates DeleteFileForbidden with default headers values
func NewDeleteFileForbidden() *DeleteFileForbidden {
	return &DeleteFileForbidden{}
}

// WithPayload adds the payload to the delete file forbidden response
func (o *DeleteFileForbidden) WithPayload(payload *models.Error) *DeleteFileForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete file forbidden response
func (o *DeleteFileForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFileForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type DeleteFileNotFound
const DeleteFileNotFoundCode int = 404

/*DeleteFileNotFound delete file not found

swagger:response deleteFileNotFound
*/
type DeleteFileNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteFileNotFound creates DeleteFileNotFound with default headers values
func NewDeleteFileNotFound() *DeleteFileNotFound {
	return &DeleteFileNotFound{}
}

// WithPayload adds the payload to the delete file not found response
func (o *DeleteFileNotFound) WithPayload(payload *models.Error) *DeleteFileNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete file not found response
func (o *DeleteFileNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFileNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type DeleteFileConflict
const DeleteFileConflictCode int = 409

/*DeleteFileConflict delete file conflict

swagger:response deleteFileConflict
*/
type DeleteFileConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteFileConflict creates DeleteFileConflict with default headers values
func NewDeleteFileConflict() *DeleteFileConflict {
	return &DeleteFileConflict{}
}

// WithPayload adds the payload to the delete file conflict response
func (o *DeleteFileConflict) WithPayload(payload *models.Error) *DeleteFileConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete file conflict response
func (o *DeleteFileConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFileConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type DeleteFileInternalServerError
const DeleteFileInternalServerErrorCode int = 500

/*DeleteFileInternalServerError delete file internal server error

swagger:response deleteFileInternalServerError
*/
type DeleteFileInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteFileInternalServerError creates DeleteFileInternalServerError with default headers values
func NewDeleteFileInternalServerError() *DeleteFileInternalServerError {
	return &DeleteFileInternalServerError{}
}

// WithPayload adds the payload to the delete file internal server error response
func (o *DeleteFileInternalServerError) WithPayload(payload *models.Error) *DeleteFileInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete file internal server error response
func (o *DeleteFileInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFileInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
