package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type PutTemplateOK
const PutTemplateOKCode int = 200

/*PutTemplateOK put template o k

swagger:response putTemplateOK
*/
type PutTemplateOK struct {

	/*
	  In: Body
	*/
	Payload *models.TemplateOutput `json:"body,omitempty"`
}

// NewPutTemplateOK creates PutTemplateOK with default headers values
func NewPutTemplateOK() *PutTemplateOK {
	return &PutTemplateOK{}
}

// WithPayload adds the payload to the put template o k response
func (o *PutTemplateOK) WithPayload(payload *models.TemplateOutput) *PutTemplateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put template o k response
func (o *PutTemplateOK) SetPayload(payload *models.TemplateOutput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTemplateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutTemplateUnauthorized
const PutTemplateUnauthorizedCode int = 401

/*PutTemplateUnauthorized put template unauthorized

swagger:response putTemplateUnauthorized
*/
type PutTemplateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutTemplateUnauthorized creates PutTemplateUnauthorized with default headers values
func NewPutTemplateUnauthorized() *PutTemplateUnauthorized {
	return &PutTemplateUnauthorized{}
}

// WithPayload adds the payload to the put template unauthorized response
func (o *PutTemplateUnauthorized) WithPayload(payload *models.Error) *PutTemplateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put template unauthorized response
func (o *PutTemplateUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTemplateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutTemplateNotFound
const PutTemplateNotFoundCode int = 404

/*PutTemplateNotFound put template not found

swagger:response putTemplateNotFound
*/
type PutTemplateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutTemplateNotFound creates PutTemplateNotFound with default headers values
func NewPutTemplateNotFound() *PutTemplateNotFound {
	return &PutTemplateNotFound{}
}

// WithPayload adds the payload to the put template not found response
func (o *PutTemplateNotFound) WithPayload(payload *models.Error) *PutTemplateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put template not found response
func (o *PutTemplateNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTemplateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutTemplateConflict
const PutTemplateConflictCode int = 409

/*PutTemplateConflict put template conflict

swagger:response putTemplateConflict
*/
type PutTemplateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutTemplateConflict creates PutTemplateConflict with default headers values
func NewPutTemplateConflict() *PutTemplateConflict {
	return &PutTemplateConflict{}
}

// WithPayload adds the payload to the put template conflict response
func (o *PutTemplateConflict) WithPayload(payload *models.Error) *PutTemplateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put template conflict response
func (o *PutTemplateConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTemplateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type PutTemplateInternalServerError
const PutTemplateInternalServerErrorCode int = 500

/*PutTemplateInternalServerError put template internal server error

swagger:response putTemplateInternalServerError
*/
type PutTemplateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutTemplateInternalServerError creates PutTemplateInternalServerError with default headers values
func NewPutTemplateInternalServerError() *PutTemplateInternalServerError {
	return &PutTemplateInternalServerError{}
}

// WithPayload adds the payload to the put template internal server error response
func (o *PutTemplateInternalServerError) WithPayload(payload *models.Error) *PutTemplateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put template internal server error response
func (o *PutTemplateInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTemplateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
