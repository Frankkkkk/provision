package dhcp_leases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type ListDhcpLeasesOK
const ListDhcpLeasesOKCode int = 200

/*ListDhcpLeasesOK list dhcp leases o k

swagger:response listDhcpLeasesOK
*/
type ListDhcpLeasesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.DhcpLeaseInput `json:"body,omitempty"`
}

// NewListDhcpLeasesOK creates ListDhcpLeasesOK with default headers values
func NewListDhcpLeasesOK() *ListDhcpLeasesOK {
	return &ListDhcpLeasesOK{}
}

// WithPayload adds the payload to the list dhcp leases o k response
func (o *ListDhcpLeasesOK) WithPayload(payload []*models.DhcpLeaseInput) *ListDhcpLeasesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list dhcp leases o k response
func (o *ListDhcpLeasesOK) SetPayload(payload []*models.DhcpLeaseInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDhcpLeasesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.DhcpLeaseInput, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// HTTP code for type ListDhcpLeasesUnauthorized
const ListDhcpLeasesUnauthorizedCode int = 401

/*ListDhcpLeasesUnauthorized list dhcp leases unauthorized

swagger:response listDhcpLeasesUnauthorized
*/
type ListDhcpLeasesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListDhcpLeasesUnauthorized creates ListDhcpLeasesUnauthorized with default headers values
func NewListDhcpLeasesUnauthorized() *ListDhcpLeasesUnauthorized {
	return &ListDhcpLeasesUnauthorized{}
}

// WithPayload adds the payload to the list dhcp leases unauthorized response
func (o *ListDhcpLeasesUnauthorized) WithPayload(payload *models.Error) *ListDhcpLeasesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list dhcp leases unauthorized response
func (o *ListDhcpLeasesUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDhcpLeasesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type ListDhcpLeasesNotFound
const ListDhcpLeasesNotFoundCode int = 404

/*ListDhcpLeasesNotFound list dhcp leases not found

swagger:response listDhcpLeasesNotFound
*/
type ListDhcpLeasesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListDhcpLeasesNotFound creates ListDhcpLeasesNotFound with default headers values
func NewListDhcpLeasesNotFound() *ListDhcpLeasesNotFound {
	return &ListDhcpLeasesNotFound{}
}

// WithPayload adds the payload to the list dhcp leases not found response
func (o *ListDhcpLeasesNotFound) WithPayload(payload *models.Error) *ListDhcpLeasesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list dhcp leases not found response
func (o *ListDhcpLeasesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDhcpLeasesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type ListDhcpLeasesInternalServerError
const ListDhcpLeasesInternalServerErrorCode int = 500

/*ListDhcpLeasesInternalServerError list dhcp leases internal server error

swagger:response listDhcpLeasesInternalServerError
*/
type ListDhcpLeasesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListDhcpLeasesInternalServerError creates ListDhcpLeasesInternalServerError with default headers values
func NewListDhcpLeasesInternalServerError() *ListDhcpLeasesInternalServerError {
	return &ListDhcpLeasesInternalServerError{}
}

// WithPayload adds the payload to the list dhcp leases internal server error response
func (o *ListDhcpLeasesInternalServerError) WithPayload(payload *models.Error) *ListDhcpLeasesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list dhcp leases internal server error response
func (o *ListDhcpLeasesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDhcpLeasesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
