package dhcp_leases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

// HTTP code for type GetDhcpLeaseOK
const GetDhcpLeaseOKCode int = 200

/*GetDhcpLeaseOK get dhcp lease o k

swagger:response getDhcpLeaseOK
*/
type GetDhcpLeaseOK struct {

	/*
	  In: Body
	*/
	Payload *models.DhcpLeaseInput `json:"body,omitempty"`
}

// NewGetDhcpLeaseOK creates GetDhcpLeaseOK with default headers values
func NewGetDhcpLeaseOK() *GetDhcpLeaseOK {
	return &GetDhcpLeaseOK{}
}

// WithPayload adds the payload to the get dhcp lease o k response
func (o *GetDhcpLeaseOK) WithPayload(payload *models.DhcpLeaseInput) *GetDhcpLeaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dhcp lease o k response
func (o *GetDhcpLeaseOK) SetPayload(payload *models.DhcpLeaseInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDhcpLeaseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type GetDhcpLeaseUnauthorized
const GetDhcpLeaseUnauthorizedCode int = 401

/*GetDhcpLeaseUnauthorized get dhcp lease unauthorized

swagger:response getDhcpLeaseUnauthorized
*/
type GetDhcpLeaseUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDhcpLeaseUnauthorized creates GetDhcpLeaseUnauthorized with default headers values
func NewGetDhcpLeaseUnauthorized() *GetDhcpLeaseUnauthorized {
	return &GetDhcpLeaseUnauthorized{}
}

// WithPayload adds the payload to the get dhcp lease unauthorized response
func (o *GetDhcpLeaseUnauthorized) WithPayload(payload *models.Error) *GetDhcpLeaseUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dhcp lease unauthorized response
func (o *GetDhcpLeaseUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDhcpLeaseUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type GetDhcpLeaseNotFound
const GetDhcpLeaseNotFoundCode int = 404

/*GetDhcpLeaseNotFound get dhcp lease not found

swagger:response getDhcpLeaseNotFound
*/
type GetDhcpLeaseNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDhcpLeaseNotFound creates GetDhcpLeaseNotFound with default headers values
func NewGetDhcpLeaseNotFound() *GetDhcpLeaseNotFound {
	return &GetDhcpLeaseNotFound{}
}

// WithPayload adds the payload to the get dhcp lease not found response
func (o *GetDhcpLeaseNotFound) WithPayload(payload *models.Error) *GetDhcpLeaseNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dhcp lease not found response
func (o *GetDhcpLeaseNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDhcpLeaseNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type GetDhcpLeaseInternalServerError
const GetDhcpLeaseInternalServerErrorCode int = 500

/*GetDhcpLeaseInternalServerError get dhcp lease internal server error

swagger:response getDhcpLeaseInternalServerError
*/
type GetDhcpLeaseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDhcpLeaseInternalServerError creates GetDhcpLeaseInternalServerError with default headers values
func NewGetDhcpLeaseInternalServerError() *GetDhcpLeaseInternalServerError {
	return &GetDhcpLeaseInternalServerError{}
}

// WithPayload adds the payload to the get dhcp lease internal server error response
func (o *GetDhcpLeaseInternalServerError) WithPayload(payload *models.Error) *GetDhcpLeaseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dhcp lease internal server error response
func (o *GetDhcpLeaseInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDhcpLeaseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
