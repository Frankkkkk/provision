package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import "encoding/json"

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Protocol for Bare Metal Provider",
    "title": "rocket-skates",
    "version": "v3.0"
  },
  "host": "127.0.0.1:8092",
  "basePath": "/api/v3",
  "paths": {
    "/bootenv": {
      "post": {
        "tags": [
          "Bootenvs"
        ],
        "summary": "Create Bootenv",
        "operationId": "post-bootenv",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/bootenv-input",
              "example": {
                "Available": false,
                "BootParams": "",
                "Errors": [
                  "bootenv: windows-2012r2-install: missing kernel wimboot (/tftpboot/windows-2012r2/install/wimboot)",
                  "bootenv: windows-2012r2-install: missing initrd boot/bcd (/tftpboot/windows-2012r2/install/boot/bcd)",
                  "bootenv: windows-2012r2-install: missing initrd boot/boot.sdi (/tftpboot/windows-2012r2/install/boot/boot.sdi)",
                  "bootenv: windows-2012r2-install: missing initrd rebar-winpe.wim (/tftpboot/windows-2012r2/install/rebar-winpe.wim)"
                ],
                "Initrds": [
                  "boot/bcd",
                  "boot/boot.sdi",
                  "rebar-winpe.wim"
                ],
                "Kernel": "wimboot",
                "Name": "windows-2012r2-install",
                "OS": {
                  "Codename": "",
                  "Family": "",
                  "Files": null,
                  "IsoFile": "rebar-win2012r2.iso",
                  "IsoSha256": "8ce9f9b23aaf397913d927c7fda3343d411f6846ef7b94f29b51108e95c46f6e",
                  "IsoUrl": "",
                  "Name": "windows-2012r2",
                  "Version": ""
                },
                "RequiredParams": [
                  "logging_servers",
                  "ntp_servers",
                  "operating-system-disk",
                  "provisioner-default-password-hash",
                  "proxy-servers",
                  "use-proxy",
                  "rebar-access_keys",
                  "rebar-machine_key",
                  "operating-system-license-key",
                  "operating-system-install-flavor"
                ],
                "Templates": [
                  {
                    "Name": "pxelinux",
                    "Path": "pxelinux.cfg/{{.Machine.HexAddress}}",
                    "UUID": "windows.pxelinux.tmpl"
                  },
                  {
                    "Name": "ipxe",
                    "Path": "{{.Machine.Address}}.ipxe",
                    "UUID": "windows.ipxe.tmpl"
                  },
                  {
                    "Name": "start-install",
                    "Path": "{{.Machine.Path}}/stage1.ps1",
                    "UUID": "stage1.cmd.tmpl"
                  },
                  {
                    "Name": "unattend.xml",
                    "Path": "{{.Machine.Path}}/unattend.xml",
                    "UUID": "2012r2-unattend.xml.tmpl"
                  }
                ],
                "TenantId": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/bootenv-output"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/bootenv-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPostResponses:401"
          },
          "409": {
            "$ref": "#/responses/trait:commonPostResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPostResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "post-bootenv",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/bootenvs": {
      "get": {
        "tags": [
          "Bootenvs"
        ],
        "summary": "List Bootenvs",
        "operationId": "list-bootenvs",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bootenv-output"
              }
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "list-bootenvs",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/bootenvs/{name}": {
      "get": {
        "tags": [
          "Bootenvs"
        ],
        "summary": "Get Bootenv",
        "operationId": "get-bootenv",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/bootenv-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "get-bootenv",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "put": {
        "tags": [
          "Bootenvs"
        ],
        "summary": "Update Bootenv",
        "operationId": "put-bootenv",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/bootenv-input",
              "example": {
                "Available": false,
                "BootParams": "",
                "Errors": [
                  "bootenv: windows-2012r2-install: missing kernel wimboot (/tftpboot/windows-2012r2/install/wimboot)",
                  "bootenv: windows-2012r2-install: missing initrd boot/bcd (/tftpboot/windows-2012r2/install/boot/bcd)",
                  "bootenv: windows-2012r2-install: missing initrd boot/boot.sdi (/tftpboot/windows-2012r2/install/boot/boot.sdi)",
                  "bootenv: windows-2012r2-install: missing initrd rebar-winpe.wim (/tftpboot/windows-2012r2/install/rebar-winpe.wim)"
                ],
                "Initrds": [
                  "boot/bcd",
                  "boot/boot.sdi",
                  "rebar-winpe.wim"
                ],
                "Kernel": "wimboot",
                "Name": "windows-2012r2-install",
                "OS": {
                  "Codename": "",
                  "Family": "",
                  "Files": null,
                  "IsoFile": "rebar-win2012r2.iso",
                  "IsoSha256": "8ce9f9b23aaf397913d927c7fda3343d411f6846ef7b94f29b51108e95c46f6e",
                  "IsoUrl": "",
                  "Name": "windows-2012r2",
                  "Version": ""
                },
                "RequiredParams": [
                  "logging_servers",
                  "ntp_servers",
                  "operating-system-disk",
                  "provisioner-default-password-hash",
                  "proxy-servers",
                  "use-proxy",
                  "rebar-access_keys",
                  "rebar-machine_key",
                  "operating-system-license-key",
                  "operating-system-install-flavor"
                ],
                "Templates": [
                  {
                    "Name": "pxelinux",
                    "Path": "pxelinux.cfg/{{.Machine.HexAddress}}",
                    "UUID": "windows.pxelinux.tmpl"
                  },
                  {
                    "Name": "ipxe",
                    "Path": "{{.Machine.Address}}.ipxe",
                    "UUID": "windows.ipxe.tmpl"
                  },
                  {
                    "Name": "start-install",
                    "Path": "{{.Machine.Path}}/stage1.ps1",
                    "UUID": "stage1.cmd.tmpl"
                  },
                  {
                    "Name": "unattend.xml",
                    "Path": "{{.Machine.Path}}/unattend.xml",
                    "UUID": "2012r2-unattend.xml.tmpl"
                  }
                ],
                "TenantId": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/bootenv-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPutResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonPutResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonPutResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPutResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "put-bootenv",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Bootenvs"
        ],
        "summary": "Delete Bootenv",
        "operationId": "delete-bootenv",
        "responses": {
          "204": {},
          "401": {
            "$ref": "#/responses/trait:commonDeleteResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonDeleteResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonDeleteResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonDeleteResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "delete-bootenv",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "patch": {
        "tags": [
          "Bootenvs"
        ],
        "summary": "Patch Bootenv",
        "operationId": "patch-bootenv",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/patchinput"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/bootenv-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPatchResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonPatchResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonPatchResponses:409"
          },
          "417": {
            "$ref": "#/responses/trait:commonPatchResponses:417"
          },
          "500": {
            "$ref": "#/responses/trait:commonPatchResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "patch-bootenv",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "List Files",
        "operationId": "list-files",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "list-files",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/files/{path}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Files"
        ],
        "summary": "Get File",
        "operationId": "get-file",
        "responses": {
          "200": {
            "schema": {
              "format": "binary"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "get-file",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "consumes": [
          "application/octet-stream"
        ],
        "tags": [
          "Files"
        ],
        "summary": "Create File",
        "operationId": "post-file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "format": "binary"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Size": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPostResponses:401"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "$ref": "#/responses/trait:commonPostResponses:500"
          },
          "507": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "post-file",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete File",
        "operationId": "delete-file",
        "responses": {
          "204": {},
          "401": {
            "$ref": "#/responses/trait:commonDeleteResponses:401"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "$ref": "#/responses/trait:commonDeleteResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonDeleteResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonDeleteResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "delete-file",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "path",
          "in": "path",
          "required": true
        }
      ]
    },
    "/isos": {
      "get": {
        "tags": [
          "Isos"
        ],
        "summary": "List Isos",
        "operationId": "list-isos",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "list-isos",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/isos/{name}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Isos"
        ],
        "summary": "Get Iso",
        "operationId": "get-iso",
        "responses": {
          "200": {
            "schema": {
              "format": "binary"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "get-iso",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "consumes": [
          "application/octet-stream"
        ],
        "tags": [
          "Isos"
        ],
        "summary": "Create Iso",
        "operationId": "post-iso",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "format": "binary"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Size": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPostResponses:401"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "$ref": "#/responses/trait:commonPostResponses:500"
          },
          "507": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "post-iso",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Isos"
        ],
        "summary": "Delete Iso",
        "operationId": "delete-iso",
        "responses": {
          "204": {},
          "401": {
            "$ref": "#/responses/trait:commonDeleteResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonDeleteResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonDeleteResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonDeleteResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "delete-iso",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/leases": {
      "get": {
        "tags": [
          "Dhcp leases"
        ],
        "summary": "List Dhcp leases",
        "operationId": "list-dhcp-leases",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dhcp-lease-input"
              }
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "list-dhcp-leases",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "tags": [
          "Dhcp leases"
        ],
        "summary": "Create DHCP Lease",
        "operationId": "post-dhcp-lease",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dhcp-lease-input"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/dhcp-lease-input"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPostResponses:401"
          },
          "409": {
            "$ref": "#/responses/trait:commonPostResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPostResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "post-dhcp-lease",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/leases/{id}": {
      "get": {
        "tags": [
          "Dhcp leases"
        ],
        "summary": "Get DHCP Lease",
        "operationId": "get-dhcp-lease",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/dhcp-lease-input"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "get-dhcp-lease",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "put": {
        "tags": [
          "Dhcp leases"
        ],
        "summary": "Update DHCP Lease",
        "operationId": "put-dhcp-lease",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dhcp-lease-input"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/dhcp-lease-input"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPutResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonPutResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonPutResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPutResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "put-dhcp-lease",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Dhcp leases"
        ],
        "summary": "Delete DHCP Lease",
        "operationId": "delete-dhcp-lease",
        "responses": {
          "204": {},
          "401": {
            "$ref": "#/responses/trait:commonDeleteResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonDeleteResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonDeleteResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonDeleteResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "delete-dhcp-lease",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/machines": {
      "get": {
        "tags": [
          "Machines"
        ],
        "summary": "List Machines",
        "operationId": "list-machines",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/machine-output"
              }
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "list-machines",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "tags": [
          "Machines"
        ],
        "summary": "Create Machine",
        "operationId": "post-machine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/machine-input",
              "example": {
                "Address": "192.168.124.84",
                "BootEnv": "local",
                "Name": "d52-54-3d-49-00-00.local.neode.org",
                "Params": {},
                "TenantId": 1,
                "Uuid": "0f2a8f98-af51-415e-ad4f-cfea69adaed3"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/machine-output"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/machine-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPostResponses:401"
          },
          "409": {
            "$ref": "#/responses/trait:commonPostResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPostResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "post-machine",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/machines/{uuid}": {
      "get": {
        "tags": [
          "Machines"
        ],
        "summary": "Get Machine",
        "operationId": "get-machine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/machine-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "get-machine",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "put": {
        "tags": [
          "Machines"
        ],
        "summary": "Update Machine",
        "operationId": "put-machine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/machine-input",
              "example": {
                "Address": "192.168.124.84",
                "BootEnv": "local",
                "Name": "d52-54-3d-49-00-00.local.neode.org",
                "Params": {},
                "TenantId": 1,
                "Uuid": "0f2a8f98-af51-415e-ad4f-cfea69adaed3"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/machine-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPutResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonPutResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonPutResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPutResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "put-machine",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Machines"
        ],
        "summary": "Delete Machine",
        "operationId": "delete-machine",
        "responses": {
          "204": {},
          "401": {
            "$ref": "#/responses/trait:commonDeleteResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonDeleteResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonDeleteResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonDeleteResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "delete-machine",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "patch": {
        "tags": [
          "Machines"
        ],
        "summary": "Patch Machine",
        "operationId": "patch-machine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/patchinput"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/machine-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPatchResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonPatchResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonPatchResponses:409"
          },
          "417": {
            "$ref": "#/responses/trait:commonPatchResponses:417"
          },
          "500": {
            "$ref": "#/responses/trait:commonPatchResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "patch-machine",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "uuid",
          "in": "path",
          "required": true
        }
      ]
    },
    "/reservations": {
      "get": {
        "tags": [
          "Dhcp reservations"
        ],
        "summary": "List Dhcp reservations",
        "operationId": "LIST-dhcp-reservations",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dhcp-reservation-input"
              }
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "LIST-dhcp-reservations",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "tags": [
          "Dhcp reservations"
        ],
        "summary": "Create DHCP Reservation",
        "operationId": "POST-dhcp-reservation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dhcp-reservation-input"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/dhcp-reservation-input"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "POST-dhcp-reservation",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/reservations/{id}": {
      "get": {
        "tags": [
          "Dhcp reservations"
        ],
        "summary": "Get DHCP Reservation",
        "operationId": "GET-dhcp-reservation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/dhcp-reservation-input"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "GET-dhcp-reservation",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "put": {
        "tags": [
          "Dhcp reservations"
        ],
        "summary": "Update DHCP Reservation",
        "operationId": "PUT-dhcp-reservation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dhcp-reservation-input"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/dhcp-reservation-input"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "PUT-dhcp-reservation",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Dhcp reservations"
        ],
        "summary": "Delete DHCP Reservation",
        "operationId": "DELETE-dhcp-reservation",
        "responses": {
          "204": {}
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "DELETE-dhcp-reservation",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/subnets": {
      "get": {
        "tags": [
          "Dhcp subnets"
        ],
        "summary": "List Dhcp subnets",
        "operationId": "LIST-dhcp-subnets",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dhcp-subnet-input"
              }
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "LIST-dhcp-subnets",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "tags": [
          "Dhcp subnets"
        ],
        "summary": "Create DHCP Subnet",
        "operationId": "POST-dhcp-subnet",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dhcp-subnet-input"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/dhcp-subnet-input"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "POST-dhcp-subnet",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/subnets/{id}": {
      "get": {
        "tags": [
          "Dhcp subnets"
        ],
        "summary": "Get DHCP Subnet",
        "operationId": "GET-dhcp-subnet",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/dhcp-subnet-input"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "GET-dhcp-subnet",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "put": {
        "tags": [
          "Dhcp subnets"
        ],
        "summary": "Update DHCP Subnet",
        "operationId": "PUT-dhcp-subnet",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dhcp-subnet-input"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/dhcp-subnet-input"
            }
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "PUT-dhcp-subnet",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Dhcp subnets"
        ],
        "summary": "Delete DHCP Subnet",
        "operationId": "DELETE-dhcp-subnet",
        "responses": {
          "204": {}
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "DELETE-dhcp-subnet",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/template/{uuid}": {
      "patch": {
        "tags": [
          "Templates"
        ],
        "summary": "Patch Template",
        "operationId": "patch-template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/patchinput"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/template-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPatchResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonPatchResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonPatchResponses:409"
          },
          "417": {
            "$ref": "#/responses/trait:commonPatchResponses:417"
          },
          "500": {
            "$ref": "#/responses/trait:commonPatchResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "patch-template",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "uuid",
          "in": "path",
          "required": true
        }
      ]
    },
    "/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "List Templates",
        "operationId": "list-templates",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/template-output"
              }
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "list-templates",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create Template",
        "operationId": "post-template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/template-input",
              "example": {
                "Contents": "net use Q: \"\\\\{{.ProvisionerAddress}}\\tftpboot\"\nQ:\\{{.Env.OS.Name}}\\install\\setup.exe /unattend:Q:\\machines\\{{.Machine.UUID}}\\unattend.xml\n",
                "TenantId": 1,
                "UUID": "stage1.ps1.tmpl"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/template-output"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/template-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPostResponses:401"
          },
          "409": {
            "$ref": "#/responses/trait:commonPostResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPostResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "post-template",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      }
    },
    "/templates/{uuid}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Get Template",
        "operationId": "get-template",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/template-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonGetResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonGetResponses:404"
          },
          "500": {
            "$ref": "#/responses/trait:commonGetResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "get-template",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "put": {
        "tags": [
          "Templates"
        ],
        "summary": "Update Template",
        "operationId": "put-template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/template-input",
              "example": {
                "Contents": "net use Q: \"\\\\{{.ProvisionerAddress}}\\tftpboot\"\nQ:\\{{.Env.OS.Name}}\\install\\setup.exe /unattend:Q:\\machines\\{{.Machine.UUID}}\\unattend.xml\n",
                "TenantId": 1,
                "UUID": "stage1.ps1.tmpl"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/template-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPutResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonPutResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonPutResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonPutResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "put-template",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "post": {
        "consumes": [
          "application/octet-stream"
        ],
        "tags": [
          "Templates"
        ],
        "summary": "Replace Template",
        "operationId": "replace-template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "format": "binary"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/template-output"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/template-output"
            }
          },
          "401": {
            "$ref": "#/responses/trait:commonPostResponses:401"
          },
          "409": {
            "$ref": "#/responses/trait:commonPostResponses:409"
          },
          "417": {
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "$ref": "#/responses/trait:commonPostResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "replace-template",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Delete Template",
        "operationId": "delete-template",
        "responses": {
          "204": {},
          "401": {
            "$ref": "#/responses/trait:commonDeleteResponses:401"
          },
          "404": {
            "$ref": "#/responses/trait:commonDeleteResponses:404"
          },
          "409": {
            "$ref": "#/responses/trait:commonDeleteResponses:409"
          },
          "500": {
            "$ref": "#/responses/trait:commonDeleteResponses:500"
          }
        },
        "x-stoplight": {
          "afterScript": null,
          "beforeScript": null,
          "id": "delete-template",
          "mock": {
            "dynamic": false,
            "enabled": false,
            "statusCode": 200
          },
          "public": true
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "uuid",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "bootenv-input": {
      "type": "object",
      "title": "Bootenv Input",
      "properties": {
        "Available": {
          "type": "boolean"
        },
        "BootParams": {
          "type": "string"
        },
        "Initrds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Kernel": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "OS": {
          "type": "object",
          "properties": {
            "Codename": {
              "type": "string"
            },
            "Family": {
              "type": "string"
            },
            "IsoFile": {
              "type": "string"
            },
            "IsoSha256": {
              "type": "string"
            },
            "IsoUrl": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Version": {
              "type": "string"
            }
          }
        },
        "RequiredParams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Templates": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Path": {
                "type": "string"
              },
              "UUID": {
                "type": "string"
              }
            }
          }
        }
      },
      "x-stoplight": {
        "id": "bootenv-input",
        "name": "Bootenv Input",
        "public": true
      },
      "example": {
        "Available": false,
        "BootParams": "",
        "Errors": [
          "bootenv: windows-2012r2-install: missing kernel wimboot (/tftpboot/windows-2012r2/install/wimboot)",
          "bootenv: windows-2012r2-install: missing initrd boot/bcd (/tftpboot/windows-2012r2/install/boot/bcd)",
          "bootenv: windows-2012r2-install: missing initrd boot/boot.sdi (/tftpboot/windows-2012r2/install/boot/boot.sdi)",
          "bootenv: windows-2012r2-install: missing initrd rebar-winpe.wim (/tftpboot/windows-2012r2/install/rebar-winpe.wim)"
        ],
        "Initrds": [
          "boot/bcd",
          "boot/boot.sdi",
          "rebar-winpe.wim"
        ],
        "Kernel": "wimboot",
        "Name": "windows-2012r2-install",
        "OS": {
          "Codename": "",
          "Family": "",
          "Files": [],
          "IsoFile": "rebar-win2012r2.iso",
          "IsoSha256": "8ce9f9b23aaf397913d927c7fda3343d411f6846ef7b94f29b51108e95c46f6e",
          "IsoUrl": "",
          "Name": "windows-2012r2",
          "Version": ""
        },
        "RequiredParams": [
          "logging_servers",
          "ntp_servers",
          "operating-system-disk",
          "provisioner-default-password-hash",
          "proxy-servers",
          "use-proxy",
          "rebar-access_keys",
          "rebar-machine_key",
          "operating-system-license-key",
          "operating-system-install-flavor"
        ],
        "Templates": [
          {
            "Name": "pxelinux",
            "Path": "pxelinux.cfg/{{.Machine.HexAddress}}",
            "UUID": "windows.pxelinux.tmpl"
          },
          {
            "Name": "ipxe",
            "Path": "{{.Machine.Address}}.ipxe",
            "UUID": "windows.ipxe.tmpl"
          },
          {
            "Name": "start-install",
            "Path": "{{.Machine.Path}}/stage1.ps1",
            "UUID": "stage1.cmd.tmpl"
          },
          {
            "Name": "unattend.xml",
            "Path": "{{.Machine.Path}}/unattend.xml",
            "UUID": "2012r2-unattend.xml.tmpl"
          }
        ],
        "TenantId": 1
      }
    },
    "bootenv-output": {
      "title": "Bootenv  Output",
      "allOf": [
        {
          "$ref": "#/definitions/bootenv-input"
        },
        {
          "type": "object",
          "properties": {
            "Errors": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "x-stoplight": {
        "id": "bootenv-output",
        "name": "Bootenv  Output",
        "public": true
      }
    },
    "dhcp-lease-input": {
      "type": "object",
      "title": "DHCP Lease Input",
      "required": [
        "IpAddress",
        "MacAddress",
        "Valid",
        "ExpireTime"
      ],
      "properties": {
        "ExpireTime": {
          "type": "string",
          "format": "date-time"
        },
        "IpAddress": {
          "type": "string",
          "format": "ipv4"
        },
        "MacAddress": {
          "type": "string",
          "maxLength": 17,
          "minLength": 17,
          "pattern": "^([0-9a-f]{2}):{5}[0-9a-f]{2}$"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-stoplight": {
        "id": "dhcp-lease-input",
        "name": "DHCP Lease Input",
        "public": true
      }
    },
    "dhcp-reservation-input": {
      "type": "object",
      "title": "DHCP Reservation Input",
      "required": [
        "IpAddress",
        "MacAddress"
      ],
      "properties": {
        "IpAddress": {
          "type": "string",
          "format": "ipv4"
        },
        "MacAddress": {
          "type": "string"
        },
        "NextServer": {
          "type": "string",
          "format": "ipv4"
        },
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dhcpoption"
          }
        }
      },
      "x-stoplight": {
        "id": "dhcp-reservation-input",
        "name": "DHCP Reservation Input",
        "public": true
      }
    },
    "dhcp-subnet-input": {
      "type": "object",
      "title": "DHCP Subnet Input",
      "required": [
        "Name",
        "Subnet",
        "ActiveStart",
        "ActiveEnd",
        "ActiveLeaseTime",
        "ReservedLeaseTime"
      ],
      "properties": {
        "ActiveEnd": {
          "type": "string",
          "format": "ipv4"
        },
        "ActiveLeaseTime": {
          "type": "integer",
          "default": 300
        },
        "ActiveStart": {
          "type": "string",
          "format": "ipv4"
        },
        "Name": {
          "type": "string"
        },
        "NextServer": {
          "type": "string",
          "format": "ipv4"
        },
        "OnlyBoundLeases": {
          "type": "boolean",
          "default": false
        },
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dhcpoption"
          }
        },
        "ReservedLeaseTime": {
          "type": "integer",
          "default": 7200
        },
        "Subnet": {
          "type": "string",
          "pattern": "^([0-9]{1-3}\\.){,3}[0-9]{,3}/[0-9]{,2}$"
        }
      },
      "x-stoplight": {
        "id": "dhcp-subnet-input",
        "name": "DHCP Subnet Input",
        "public": true
      }
    },
    "dhcpoption": {
      "type": "object",
      "title": "DhcpOption",
      "required": [
        "Code",
        "Value"
      ],
      "properties": {
        "Code": {
          "type": "integer"
        },
        "Value": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "dhcpoption",
        "name": "DhcpOption",
        "public": true
      }
    },
    "error": {
      "type": "object",
      "title": "Error",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "error",
        "name": "Error",
        "public": true
      }
    },
    "machine-input": {
      "type": "object",
      "title": "Machine Input",
      "properties": {
        "Address": {
          "type": "string",
          "format": "ipv4"
        },
        "BootEnv": {
          "type": "string"
        },
        "Name": {
          "type": "string",
          "format": "hostname"
        },
        "Params": {
          "$ref": "#/definitions/parameterobjectmap"
        },
        "TenantId": {
          "type": "integer"
        },
        "Uuid": {
          "type": "string",
          "format": "uuid"
        }
      },
      "x-stoplight": {
        "id": "machine-input",
        "name": "Machine Input",
        "public": true
      },
      "example": {
        "Address": "192.168.124.84",
        "BootEnv": "local",
        "Name": "d52-54-3d-49-00-00.local.neode.org",
        "Params": {},
        "TenantId": 1,
        "Uuid": "0f2a8f98-af51-415e-ad4f-cfea69adaed3"
      }
    },
    "machine-output": {
      "title": "Machine Output",
      "allOf": [
        {
          "$ref": "#/definitions/machine-input"
        },
        {
          "type": "object",
          "properties": {
            "Errors": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "x-stoplight": {
        "id": "machine-output",
        "name": "Machine Output",
        "public": true
      }
    },
    "parameterobjectmap": {
      "title": "ParameterObjectMap",
      "additionalProperties": {
        "type": "object"
      },
      "x-stoplight": {
        "id": "parameterobjectmap",
        "name": "ParameterObjectMap",
        "public": true
      }
    },
    "patchinput": {
      "type": "array",
      "title": "PatchInput",
      "items": {
        "$ref": "#/definitions/patchline"
      },
      "x-stoplight": {
        "id": "patchinput",
        "name": "PatchInput",
        "public": true
      }
    },
    "patchline": {
      "type": "object",
      "title": "PatchLine",
      "properties": {
        "From": {
          "type": "string"
        },
        "Op": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "Value": {}
      },
      "x-stoplight": {
        "id": "patchline",
        "name": "PatchLine",
        "public": true
      }
    },
    "principal": {
      "type": "string",
      "title": "Principal",
      "x-stoplight": {
        "id": "principal",
        "name": "Principal",
        "public": true
      }
    },
    "template-input": {
      "type": "object",
      "title": "Template Input",
      "properties": {
        "Contents": {
          "type": "string"
        },
        "UUID": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "template-input",
        "name": "Template Input",
        "public": true
      },
      "example": {
        "Contents": "net use Q: \"\\\\{{.ProvisionerAddress}}\\tftpboot\"\nQ:\\{{.Env.OS.Name}}\\install\\setup.exe /unattend:Q:\\machines\\{{.Machine.UUID}}\\unattend.xml\n",
        "TenantId": 1,
        "UUID": "stage1.ps1.tmpl"
      }
    },
    "template-output": {
      "title": "Template Output",
      "allOf": [
        {
          "$ref": "#/definitions/template-input"
        },
        {
          "type": "object",
          "properties": {
            "Errors": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "x-stoplight": {
        "id": "template-output",
        "name": "Template Output",
        "public": true
      }
    }
  },
  "responses": {
    "trait:commonDeleteResponses:401": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonDeleteResponses:404": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonDeleteResponses:409": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonDeleteResponses:500": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonGetResponses:401": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonGetResponses:404": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonGetResponses:500": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPatchResponses:401": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPatchResponses:404": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPatchResponses:409": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPatchResponses:417": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPatchResponses:500": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPostResponses:401": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPostResponses:409": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPostResponses:500": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPutResponses:401": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPutResponses:404": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPutResponses:409": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "trait:commonPutResponses:500": {
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "auth_token": {
      "type": "apiKey",
      "name": "auth_token",
      "in": "query"
    },
    "rebar": {
      "type": "basic"
    }
  },
  "security": [
    {
      "Authorization": []
    },
    {
      "auth_token": []
    },
    {
      "rebar": []
    }
  ],
  "x-stoplight": {
    "afterScript": "",
    "beforeScript": "",
    "functions": {},
    "mock": {
      "dynamic": false,
      "enabled": false
    },
    "textSections": {},
    "version": {
      "groups": {
        "docs": [
          {
            "divider": false,
            "items": [
              {
                "_id": "GET-dhcp-reservation",
                "type": "endpoints"
              },
              {
                "_id": "LIST-dhcp-reservations",
                "type": "endpoints"
              },
              {
                "_id": "PUT-dhcp-reservation",
                "type": "endpoints"
              },
              {
                "_id": "POST-dhcp-reservation",
                "type": "endpoints"
              },
              {
                "_id": "DELETE-dhcp-reservation",
                "type": "endpoints"
              }
            ],
            "name": "Dhcp reservations"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "GET-dhcp-subnet",
                "type": "endpoints"
              },
              {
                "_id": "LIST-dhcp-subnets",
                "type": "endpoints"
              },
              {
                "_id": "PUT-dhcp-subnet",
                "type": "endpoints"
              },
              {
                "_id": "POST-dhcp-subnet",
                "type": "endpoints"
              },
              {
                "_id": "DELETE-dhcp-subnet",
                "type": "endpoints"
              }
            ],
            "name": "Dhcp subnets"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "get-dhcp-lease",
                "type": "endpoints"
              },
              {
                "_id": "list-dhcp-leases",
                "type": "endpoints"
              },
              {
                "_id": "put-dhcp-lease",
                "type": "endpoints"
              },
              {
                "_id": "post-dhcp-lease",
                "type": "endpoints"
              },
              {
                "_id": "delete-dhcp-lease",
                "type": "endpoints"
              }
            ],
            "name": "Dhcp leases"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "list-files",
                "type": "endpoints"
              },
              {
                "_id": "post-file",
                "type": "endpoints"
              },
              {
                "_id": "get-file",
                "type": "endpoints"
              },
              {
                "_id": "delete-file",
                "type": "endpoints"
              }
            ],
            "name": "Files"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "list-bootenvs",
                "type": "endpoints"
              },
              {
                "_id": "post-bootenv",
                "type": "endpoints"
              },
              {
                "_id": "get-bootenv",
                "type": "endpoints"
              },
              {
                "_id": "patch-bootenv",
                "type": "endpoints"
              },
              {
                "_id": "put-bootenv",
                "type": "endpoints"
              },
              {
                "_id": "delete-bootenv",
                "type": "endpoints"
              }
            ],
            "name": "Bootenvs"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "list-isos",
                "type": "endpoints"
              },
              {
                "_id": "post-iso",
                "type": "endpoints"
              },
              {
                "_id": "get-iso",
                "type": "endpoints"
              },
              {
                "_id": "delete-iso",
                "type": "endpoints"
              }
            ],
            "name": "Isos"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "list-templates",
                "type": "endpoints"
              },
              {
                "_id": "post-template",
                "type": "endpoints"
              },
              {
                "_id": "replace-template",
                "type": "endpoints"
              },
              {
                "_id": "get-template",
                "type": "endpoints"
              },
              {
                "_id": "put-template",
                "type": "endpoints"
              },
              {
                "_id": "patch-template",
                "type": "endpoints"
              },
              {
                "_id": "delete-template",
                "type": "endpoints"
              }
            ],
            "name": "Templates"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "list-machines",
                "type": "endpoints"
              },
              {
                "_id": "post-machine",
                "type": "endpoints"
              },
              {
                "_id": "get-machine",
                "type": "endpoints"
              },
              {
                "_id": "put-machine",
                "type": "endpoints"
              },
              {
                "_id": "patch-machine",
                "type": "endpoints"
              },
              {
                "_id": "delete-machine",
                "type": "endpoints"
              }
            ],
            "name": "Machines"
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "machine-input",
                "type": "schemas"
              },
              {
                "_id": "machine-output",
                "type": "schemas"
              },
              {
                "_id": "parameterobjectmap",
                "type": "schemas"
              },
              {
                "_id": "error",
                "type": "schemas"
              },
              {
                "_id": "template-input",
                "type": "schemas"
              },
              {
                "_id": "template-output",
                "type": "schemas"
              },
              {
                "_id": "patchinput",
                "type": "schemas"
              },
              {
                "_id": "patchline",
                "type": "schemas"
              },
              {
                "_id": "bootenv-input",
                "type": "schemas"
              },
              {
                "_id": "bootenv-output",
                "type": "schemas"
              },
              {
                "_id": "principal",
                "type": "schemas"
              },
              {
                "_id": "dhcp-lease-input",
                "type": "schemas"
              },
              {
                "_id": "dhcpoption",
                "type": "schemas"
              },
              {
                "_id": "dhcp-subnet-input",
                "type": "schemas"
              },
              {
                "_id": "dhcp-reservation-input",
                "type": "schemas"
              }
            ],
            "name": "Models"
          }
        ],
        "savedEntries": [],
        "tests": [],
        "traits": []
      }
    }
  },
  "x-tests": {
    "XEzHkGqQapiq8SGBN": {
      "id": "XEzHkGqQapiq8SGBN",
      "initialVariables": {},
      "name": "Test Empty ISOs list",
      "steps": [
        {
          "assertions": [
            {
              "location": "response.body",
              "match": 200,
              "op": "validate.pass"
            },
            {
              "expected": 200,
              "location": "response.code",
              "op": "eq"
            },
            {
              "expected": "[]",
              "location": "response.body",
              "op": "eq",
              "target": ""
            }
          ],
          "capture": {
            "body": [],
            "headers": []
          },
          "id": "seRgefTxyYxnXHGMz",
          "name": "Get List of ISOs",
          "request": {
            "authentication": {},
            "bodySize": -1,
            "cookies": [],
            "headers": [],
            "headersSize": -1,
            "method": "get",
            "pathParams": [],
            "postData": {},
            "queryString": [],
            "transformed": false,
            "url": "/isos",
            "valid": 2
          }
        }
      ]
    }
  }
}`))
}
