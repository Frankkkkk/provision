package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BootenvInput Bootenv Input
// swagger:model bootenv-input
type BootenvInput struct {

	// available
	Available bool `json:"Available,omitempty"`

	// boot params
	BootParams string `json:"BootParams,omitempty"`

	// initrds
	Initrds []string `json:"Initrds"`

	// kernel
	Kernel string `json:"Kernel,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// o s
	OS *BootenvInputOS `json:"OS,omitempty"`

	// required params
	RequiredParams []string `json:"RequiredParams"`

	// templates
	Templates []*BootenvInputTemplatesItems0 `json:"Templates"`
}

// Validate validates this bootenv input
func (m *BootenvInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInitrds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOS(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRequiredParams(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTemplates(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BootenvInput) validateInitrds(formats strfmt.Registry) error {

	if swag.IsZero(m.Initrds) { // not required
		return nil
	}

	return nil
}

func (m *BootenvInput) validateOS(formats strfmt.Registry) error {

	if swag.IsZero(m.OS) { // not required
		return nil
	}

	if m.OS != nil {

		if err := m.OS.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("OS")
			}
			return err
		}
	}

	return nil
}

func (m *BootenvInput) validateRequiredParams(formats strfmt.Registry) error {

	if swag.IsZero(m.RequiredParams) { // not required
		return nil
	}

	return nil
}

func (m *BootenvInput) validateTemplates(formats strfmt.Registry) error {

	if swag.IsZero(m.Templates) { // not required
		return nil
	}

	for i := 0; i < len(m.Templates); i++ {

		if swag.IsZero(m.Templates[i]) { // not required
			continue
		}

		if m.Templates[i] != nil {

			if err := m.Templates[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Templates" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// BootenvInputOS bootenv input o s
// swagger:model BootenvInputOS
type BootenvInputOS struct {

	// codename
	Codename string `json:"Codename,omitempty"`

	// family
	Family string `json:"Family,omitempty"`

	// iso file
	IsoFile string `json:"IsoFile,omitempty"`

	// iso sha256
	IsoSha256 string `json:"IsoSha256,omitempty"`

	// iso Url
	IsoURL string `json:"IsoUrl,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// version
	Version string `json:"Version,omitempty"`
}

// Validate validates this bootenv input o s
func (m *BootenvInputOS) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// BootenvInputTemplatesItems0 bootenv input templates items0
// swagger:model BootenvInputTemplatesItems0
type BootenvInputTemplatesItems0 struct {

	// name
	Name string `json:"Name,omitempty"`

	// path
	Path string `json:"Path,omitempty"`

	// UUID
	UUID string `json:"UUID,omitempty"`
}

// Validate validates this bootenv input templates items0
func (m *BootenvInputTemplatesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
