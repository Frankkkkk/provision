package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostFileParams creates a new PostFileParams object
// with the default values initialized.
func NewPostFileParams() *PostFileParams {
	var ()
	return &PostFileParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostFileParamsWithTimeout creates a new PostFileParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostFileParamsWithTimeout(timeout time.Duration) *PostFileParams {
	var ()
	return &PostFileParams{

		timeout: timeout,
	}
}

// NewPostFileParamsWithContext creates a new PostFileParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostFileParamsWithContext(ctx context.Context) *PostFileParams {
	var ()
	return &PostFileParams{

		Context: ctx,
	}
}

// NewPostFileParamsWithHTTPClient creates a new PostFileParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostFileParamsWithHTTPClient(client *http.Client) *PostFileParams {
	var ()
	return &PostFileParams{
		HTTPClient: client,
	}
}

/*PostFileParams contains all the parameters to send to the API endpoint
for the post file operation typically these are written to a http.Request
*/
type PostFileParams struct {

	/*Body*/
	Body io.ReadCloser
	/*Path*/
	Path string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post file params
func (o *PostFileParams) WithTimeout(timeout time.Duration) *PostFileParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post file params
func (o *PostFileParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post file params
func (o *PostFileParams) WithContext(ctx context.Context) *PostFileParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post file params
func (o *PostFileParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post file params
func (o *PostFileParams) WithHTTPClient(client *http.Client) *PostFileParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post file params
func (o *PostFileParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post file params
func (o *PostFileParams) WithBody(body io.ReadCloser) *PostFileParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post file params
func (o *PostFileParams) SetBody(body io.ReadCloser) {
	o.Body = body
}

// WithPath adds the path to the post file params
func (o *PostFileParams) WithPath(path string) *PostFileParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the post file params
func (o *PostFileParams) SetPath(path string) {
	o.Path = path
}

// WriteToRequest writes these params to a swagger request
func (o *PostFileParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param path
	if err := r.SetPathParam("path", o.Path); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
